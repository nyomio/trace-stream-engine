buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'nyomio'
version '0.1'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


configurations {
    ecj
}

dependencies {
    ecj 'org.eclipse.jdt.core.compiler:ecj:4.6.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "org.apache.flink:flink-streaming-java_2.11:1.4.1"
    compile "org.apache.flink:flink-java:1.4.1"
    compile "org.apache.flink:flink-clients_2.11:1.4.1"

    compile 'org.springframework:spring-context:5.0.4.RELEASE'

    compile 'org.apache.commons:commons-lang3:3.7'

    compile "io.druid:tranquility-core_2.11:0.8.2"
    compile "io.druid:tranquility-flink_2.11:0.8.2"
    compile 'io.druid:druid-api:0.11.0'


    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.7.2'

    compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.12'

}

compileJava {
    options.fork = true
    options.forkOptions.with {
        executable = 'java'
        jvmArgs = ['-classpath', project.configurations.ecj.asPath, 'org.eclipse.jdt.internal.compiler.batch.Main', '-nowarn']
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.example.flink.SocketWindowWordCount'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
